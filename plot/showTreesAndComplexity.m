function img = showTreesAndComplexity(poph, gen, P, compression, toFile)%, comps)

if not(exist('toFile', 'var'))
  toFile = true;
end

comLZfigureLongitud = compression.compression(poph.generation==gen);
z=unique(comLZfigureLongitud);
%777 807 1184 16798
%comps = [[80,] 91 94 100 125 [140,] 342  512 [ 814] [1238, 1467] [2046,] [4622,] 3267 [5696,] [7967,] [16948, 22693,]]';
comps = [[80,] 91 94 100 125 [140,] 342  512 [ 777] [1184, 1467] [2046,] [4622,] 3267 [5696,] [7967,] [16948, 22693,]]';
idxs = arrayfunc(@(x)find(comLZfigureLongitud==x), comps);
lenGenome  = cellfun('prodofsize', P.genome);
lenMGenome = cellfun('prodofsize', P.mingnm);
lengnm = cellfunc(@(x)lenGenome(x), idxs);
lenmgnm = cellfunc(@(x)lenMGenome(x), idxs);
[selecs selecs] = cellfun(@(x,y)max(x), lengnm, lenmgnm);
idx = cellfun(@(x,y)x(y), idxs, array2cell(selecs));

fprintf('GENERATING IMAGES...\n');
imgs = cell(numel(idx),1);
dms = P.dimensions(idx,:);
off =P.offset(idx,:);
rs = P.raster(idx);
for zn=1:numel(idx)
  img = ones(dms(zn,:));
  img(sub2ind(dms(zn,:), rs{zn}{:})) = 0;
  img = img(end:-1:1,:);
  imgs{zn}=img;
  clear img;
end

comps = comLZfigureLongitud(idx)';
lens  = lenGenome(idx);
mlens = lenMGenome(idx);

rescale = true;

s3=0.8;
s2=1;%s3*4;
s1=1;%s3*8;
firstDownScale = {...
  'a' s1; ...
  'b' s1; ...
  'c' s1; ...
  'd' s1; ...
  'e' s1; ...
  'f' s1; ...
  'g' s2; ...
  'h' s2; ...
  'i' s2; ...
  'j' s2; ...
  'k' s3; ...
  'l' s3; ...
  'm' s3; ...
  'n' s3; ...
  'o' s3; ...
  'p' s3; ...
  'q' s3; ...
  'r' s3; ...
  's' s3; ...
  't' s3; ...
  };
 
if rescale
  fprintf('RESCALING...\n');
  %firstDownScale = 0.8;
  for k=1:numel(imgs)
    imgs{k} = imresize(imgs{k}, firstDownScale{k,2});
    imgs{k}(imgs{k}<0) = 0;
    imgs{k}(imgs{k}>1) = 1;
    imgs{k} = cat(3, imgs{[k k k]});
  end
  fprintf('RESCALED...\n');
end

indexesSortByComplexity = false;
letras = 'a':'z';
if indexesSortByComplexity
  [idxToShow idxToShow] = sort(comps);
  idxToShow = array2cell(letras(idxToShow));
else
  idxToShow = array2cell(letras(1:numel(idx)));
end
paint = true;
xefac=1.2;
showText = true;not(paint);
supd1 = [0 -5000];
supd2 = [0 -5000];
show1 = true;
show2 = true;
imscale = 0.0002;
s3 = 0.0002;
s2 = 0.0004;
s1 = 0.0008;
xe = max(lenGenome(idx))*xefac;
xlab = 'genotype length';
ye = max(comps)*15;
xtcks = 0:50:xe;
ylab = 'phenotype complexity';
ytcks = (0:0.2:2.5)*1e4;
offy=0.05;
offtx = 0;
offty=-0.1;
offi=[...
  01 0000 0000 s1 double('a'); ...
  02 0000 0000 s1 double('b'); ...
  03 0010 -0.07 s1 double('c'); ...
  04 0000 0000 s1 double('d'); ...
  05    0 0000 s1 double('e'); ...
  06    0 0000 s1 double('f'); ...
  07 0000 0000 s2 double('g'); ...
  08 0000 0000 s2 double('h'); ...
  09 0000 0000 s2 double('i'); ...
  10 0000 0000 s2 double('j'); ...
  11 0000 0000 s3 double('k'); ...
  12 0000 0000 s3 double('l'); ...
  13 0000 0000 s3 double('m'); ...
  14 00-5 -0.05 s3 double('n'); ...
  15 0-15 0000 s3 double('o'); ...
  16 0000 0000 s3 double('p'); ...
  17 0000 0000 s3 double('q'); ...
  18 0005 -0.25 s3 double('r'); ...
  19    0 0000 s3 double('s'); ...
  20 0000 0000 s3 double('t'); ...
  ];
offi2=[...
  01 00-1.5 0000 s1 double('a'); ...
  02 0000 0000 s1 double('b'); ...
  03 00-2 0000 s1 double('c'); ...
  04 0002 0000 s1 double('d'); ...
  05 0000 0000 s1 double('e'); ...
  06 0000 0000 s1 double('f'); ...
  07 0000 0000 s2 double('g'); ...
  08 0000 0000 s2 double('h'); ...
  09 0000 0000 s2 double('i'); ...
  10 0000 0000 s2 double('j'); ...
  11 0000 0000 s3 double('k'); ...
  12 -1.5 0000 s3 double('l'); ...
  13 0004 0000 s3 double('m'); ...
  14 00-1 0000 s3 double('n'); ...
  15 0000 0000 s3 double('o'); ...
  16 0002 0000 s3 double('p'); ...
  17 0005 0000 s3 double('q'); ...
  18 00-5 -0.25 s3 double('r'); ...
  19 0000 0000 s3 double('s'); ...
  20 0000 0000 s3 double('t'); ...
  ];
sy=0.3;
offt=[...
  01 0000 sy double('a'); ...
  02 0 sy double('b'); ...
  03 018 sy-0.1 double('c'); ...
  04 0-15 sy-0.1 double('d'); ...
  05 0008 sy-0.1 double('e'); ...
  06 0000 sy+0.05 double('f'); ...
  07 0000 0000 double('g'); ...
  08 0000 0000 double('h'); ...
  09 0000 0000 double('i'); ...
  10 0000 0000 double('j'); ...
  11 0000 0000 double('k'); ...
  12 0000 0000 double('l'); ...
  13 0000 0000 double('m'); ...
  14 0000 0000 double('n'); ...
  15 0000 0000 double('o'); ...
  16 0000 0000 double('p'); ...
  17 0000 0000 double('q'); ...
  18 0000 0000 double('r'); ...
  19 0000 0000 double('s'); ...
  20 0000 0000 double('t'); ...
  ];
offt2=[...
  01 00-4 sy-0.1 double('a'); ...
  02 00-3 sy-0.035 double('b'); ...
  03 00-2.5 0.10 double('c'); ...
  04 01.5 0.10 double('d'); ...
  05 00-3.5 sy-0.05 double('e'); ...
  06 0002.5 sy-0.05 double('f'); ...
  07 0000 0000 double('g'); ...
  08 0000 0000 double('h'); ...
  09 0000 0000 double('i'); ...
  10 0000 0000 double('j'); ...
  11 0000 0000 double('k'); ...
  12 0000 0000 double('l'); ...
  13 0000 0000 double('m'); ...
  14 0000 0000 double('n'); ...
  15 0000 0000 double('o'); ...
  16 0000 0000 double('p'); ...
  17 0000 0000 double('q'); ...
  18 0000 0000 double('r'); ...
  19 0000 0000 double('s'); ...
  20 0000 0000 double('t'); ...
  ];



if show1
  img1 = makeFigure(lens,  comps, imgs, off, dms, xe, xtcks, xlab, ye, ytcks, ylab, offy, offi, offt, offtx, offty, imscale, paint, showText, idxToShow);
end

xe = max(lenMGenome(idx))*xefac;
xtcks = 0:20:xe;
xlab = 'reduced genotype length';

if show2
  img2 = makeFigure(mlens, comps, imgs, off, dms, xe, xtcks, xlab, ye, ytcks, ylab, offy, offi2, offt2, offtx, offty, imscale, paint, showText, idxToShow);
end

if paint
  clear img imgs;
  if show1 && show2
    recortaA1 = 400;
    recortaB1 = 400;
    recortaA2 = 400;
    recortaB2 = 400;
    img1 = img1(:, recortaA1:end-recortaB1,:);
    img2 = img2(:, recortaA2:end-recortaB2,:);
    img = [img1, img2];
  elseif show1
    img = img1;
  elseif show2
    img = img2;
  else
    img = [];
  end
  clear img1 img2;
  if toFile
    f = 'lsystemdani\figurasrene\newgenomecomp.png';
    imwrite(img, f, 'png');
  end
end
  

function img = makeFigure(posx, posy, imgs, off, dms, xe, xtcks, xlab, ye, ytcks, ylab, offy, offs, offt, offtx, offty, imscale, paint, showText, idxToShow)

  [logmny logye logposy,logyticks, yticks]= calculateLogScaleTicks(min(posy), ye, posy, true);
%axesargs = {'FontName','times','FontSize',14, 'XLim', [0 xe], 'YLim', [0 ye], 'XTick', xtcks, 'YTick', ytcks};
axesargs = {'FontName','times','FontSize',14, 'XLim', [0 xe], 'YLim', [logmny logye], 'XTick', xtcks, 'YTick', logyticks, 'YTickLabel', yticks};%ytcks};

h = figure;
a = axes;

if paint
  v = 'off';
else
  v = 'on';
end

set(h, 'Visible', v, 'Colormap', [0 0 0; 1 1 1; jet(62)]);%, 'PaperUnits', 'points', 'PaperSize', 4*[2000 2000], 'Position', 4*[0 0 2000 2000]);
set(a, axesargs{:});

hold on;



for k=1:numel(imgs)
  imscale = offs(k,4);
  lx = (dms(k,2))*imscale*xe;
  offx = off(k,2)*imscale*xe;
  ly = dms(k,1)*imscale*logye;
  xd = offs(k,2)+posx(k)-offx+[0,lx];
  yd = offs(k,3)+logposy(k)+ly+offy+[0,-ly];
  img = double(imgs{k});
  szim = size(img);
  img2 = zeros(szim([1 2]));
  img2(img(:,:,1)<1)=1;
  image('CData', img, 'XData', xd, 'YData', yd, 'AlphaDataMapping', 'none', 'AlphaData', img2);
end

line(posx,  logposy, 'LineStyle', 'none', 'Marker', '.', 'MarkerSize', 10, 'MarkerEdgeColor', 'k');
% xl = [lens mlens nan(size(lens))]';
% yl = [comps comps nan(size(lens))]';
% line(xl,    yl,    'LineStyle', '-', 'Color', 'k');
%line(lens,  comps, 'LineStyle', 'none', 'Marker', '.', 'MarkerSize', 10, 'MarkerEdgeColor', 'k');
%line(mlens, comps, 'LineStyle', 'none', 'Marker', '.', 'MarkerSize', 10, 'MarkerEdgeColor', 'k');

if showText
  for k=1:numel(imgs)
    text(posx(k)+offt(k,2)+offtx, logposy(k)+offt(k,3)+offty, idxToShow{k}, 'FontName','times','FontSize',14);
    %text(posx(k)+offt(k,2), logposy(k)+offt(k,3), idxToShow{k}, 'FontName','times','FontSize',14);
  end
end

xlabel(xlab);
ylabel(ylab);

axis square;

%saveas(h, 'lsystemdani\figurasrene\prueba.png', 'png');

if paint
  img = imcapture(h, 'all', 600);
%   imwrite(img, fname, 'png');
  close(h);
else
  img = [];
  grid on;
end
